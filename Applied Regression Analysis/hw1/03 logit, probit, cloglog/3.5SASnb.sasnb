[{"kind":1,"language":"markdown","value":"Logit.","outputs":[]},{"kind":2,"language":"sas","value":"/* Call data. */\r\ndata cardiac;\r\n infile 'C:/Users/3sekk/Desktop/fall 23 stats/410/Data_for_Exercises/Exercise3.5Data.csv' dlm=',' firstobs = 2;\r\n input group a w;\r\nrun; \r\n\r\n/* Fitted model. Uses ods output to enable copying. */\r\nods output ModelFit=ModelFit;\r\nods output ParameterEstimates=ParameterEstimates;\r\nproc genmod data=cardiac;\r\n class ;\r\n model group(event=\"1\")= a w/dist=binomial link=logit;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from general model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"FittedLogLike\", Value);\r\nrun;\r\n%put LogLike = &FittedLogLike;\r\n\r\n/* Calculates degrees of freedom for deviance testing. Counts rows from ParameterEstimates with DF = 1 then subtracts 1, with 1 representing the number of parameters of the null model.*/\r\nproc sql noprint;\r\nselect (count(DF)-1) into :Rows from ParameterEstimates where DF = 1;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n\r\n/* Outputs ParameterEstimates to a file for Python to write out a regression analysis. */\r\nproc export data=ParameterEstimates\r\noutfile = \"C:/Users/3sekk/Desktop/fall 23 stats/410/text.csv\"\r\ndbms = csv replace;\r\ndelimeter = ',';\r\nrun;\r\n\r\n/* Null model. Uses ods output to enable copying.*/\r\nods output ModelFit=ModelFit;\r\nproc genmod data=cardiac;\r\n model group(event=\"1\")=/dist=binomial link=logit;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from null model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"NullLogLike\", Value);\r\nrun;\r\n%put LogLike = &NullLogLike;\r\n\r\n/* Deviance test via macros. */\r\ndata deviance_test;\r\ndeviance=-2*(&NullLogLike-(&FittedLogLike));\r\npvalue=1-probchi(deviance,&Rows);\r\nrun;\r\nproc print noobs;\r\nrun;\r\n\r\n/* Set prediction values. */\r\ndata predict;\r\ninput a w; cards;\r\n2 4\r\nrun;\r\n\r\n/* Plop into dataset. */\r\ndata cardiac;\r\nset cardiac predict;\r\nrun;\r\n\r\n/* Predicted model. */\r\nproc genmod;\r\n class ;\r\n model group(event=\"1\") = a w/dist=binomial link=logit;\r\n output out=outdata p=pgroup;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Acquire the final row. */\r\nproc sql noprint;\r\nselect (count(*)) into :Rows from outdata;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n/* Output prediction. */\r\nproc print data=outdata (firstobs=&Rows) noobs;\r\nvar pgroup;\r\nrun; \r\n\r\n/* Reset data. If this isn't present, rerunning this will cause the dataset to keep appending predictions. */\r\nproc delete data=cardiac;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Probit.","outputs":[]},{"kind":2,"language":"sas","value":"/* Call data. */\r\ndata cardiac;\r\n infile 'C:/Users/3sekk/Desktop/fall 23 stats/410/Data_for_Exercises/Exercise3.5Data.csv' dlm=',' firstobs = 2;\r\n input group a w;\r\nrun; \r\n\r\n/* Fitted model. Uses ods output to enable copying. */\r\nods output ModelFit=ModelFit;\r\nods output ParameterEstimates=ParameterEstimates;\r\nproc genmod data=cardiac;\r\n class ;\r\n model group(event=\"1\")= a w/dist=binomial link=probit;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from general model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"FittedLogLike\", Value);\r\nrun;\r\n%put LogLike = &FittedLogLike;\r\n\r\n/* Calculates degrees of freedom for deviance testing. Counts rows from ParameterEstimates with DF = 1 then subtracts 1, with 1 representing the number of parameters of the null model.*/\r\nproc sql noprint;\r\nselect (count(DF)-1) into :Rows from ParameterEstimates where DF = 1;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n\r\n/* Outputs ParameterEstimates to a file for Python to write out a regression analysis. */\r\nproc export data=ParameterEstimates\r\noutfile = \"C:/Users/3sekk/Desktop/fall 23 stats/410/text.csv\"\r\ndbms = csv replace;\r\ndelimeter = ',';\r\nrun;\r\n\r\n/* Null model. Uses ods output to enable copying.*/\r\nods output ModelFit=ModelFit;\r\nproc genmod data=cardiac;\r\n model group(event=\"1\")=/dist=binomial link=probit;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from null model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"NullLogLike\", Value);\r\nrun;\r\n%put LogLike = &NullLogLike;\r\n\r\n/* Deviance test via macros. */\r\ndata deviance_test;\r\ndeviance=-2*(&NullLogLike-(&FittedLogLike));\r\npvalue=1-probchi(deviance,&Rows);\r\nrun;\r\nproc print noobs;\r\nrun;\r\n\r\n/* Set prediction values. */\r\ndata predict;\r\ninput a w; cards;\r\n2 4\r\nrun;\r\n\r\n/* Plop into dataset. */\r\ndata cardiac;\r\nset cardiac predict;\r\nrun;\r\n\r\n/* Predicted model. */\r\nproc genmod;\r\n class ;\r\n model group(event=\"1\") = a w/dist=binomial link=probit;\r\n output out=outdata p=pgroup;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Acquire the final row. */\r\nproc sql noprint;\r\nselect (count(*)) into :Rows from outdata;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n/* Output prediction. */\r\nproc print data=outdata (firstobs=&Rows) noobs;\r\nvar pgroup;\r\nrun; \r\n\r\n/* Reset data. If this isn't present, rerunning this will cause the dataset to keep appending predictions. */\r\nproc delete data=cardiac;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Cloglog.","outputs":[]},{"kind":2,"language":"sas","value":"/* Call data. */\r\ndata cardiac;\r\n infile 'C:/Users/3sekk/Desktop/fall 23 stats/410/Data_for_Exercises/Exercise3.5Data.csv' dlm=',' firstobs = 2;\r\n input group a w;\r\nrun; \r\n\r\n/* Fitted model. Uses ods output to enable copying. */\r\nods output ModelFit=ModelFit;\r\nods output ParameterEstimates=ParameterEstimates;\r\nproc genmod data=cardiac;\r\n class ;\r\n model group(event=\"1\")= a w/dist=binomial link=cloglog;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from general model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"FittedLogLike\", Value);\r\nrun;\r\n%put LogLike = &FittedLogLike;\r\n\r\n/* Calculates degrees of freedom for deviance testing. Counts rows from ParameterEstimates with DF = 1 then subtracts 1, with 1 representing the number of parameters of the null model.*/\r\nproc sql noprint;\r\nselect (count(DF)-1) into :Rows from ParameterEstimates where DF = 1;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n\r\n/* Outputs ParameterEstimates to a file for Python to write out a regression analysis. */\r\nproc export data=ParameterEstimates\r\noutfile = \"C:/Users/3sekk/Desktop/fall 23 stats/410/text.csv\"\r\ndbms = csv replace;\r\ndelimeter = ',';\r\nrun;\r\n\r\n/* Null model. Uses ods output to enable copying.*/\r\nods output ModelFit=ModelFit;\r\nproc genmod data=cardiac;\r\n model group(event=\"1\")=/dist=binomial link=cloglog;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Copy log likelihood from null model's ModelFit. */\r\ndata _null_;\r\nset ModelFit;\r\nif Criterion=\"Log Likelihood\" then call symputx(\"NullLogLike\", Value);\r\nrun;\r\n%put LogLike = &NullLogLike;\r\n\r\n/* Deviance test via macros. */\r\ndata deviance_test;\r\ndeviance=-2*(&NullLogLike-(&FittedLogLike));\r\npvalue=1-probchi(deviance,&Rows);\r\nrun;\r\nproc print noobs;\r\nrun;\r\n\r\n/* Set prediction values. */\r\ndata predict;\r\ninput a w; cards;\r\n2 4\r\nrun;\r\n\r\n/* Plop into dataset. */\r\ndata cardiac;\r\nset cardiac predict;\r\nrun;\r\n\r\n/* Predicted model. */\r\nproc genmod;\r\n class ;\r\n model group(event=\"1\") = a w/dist=binomial link=cloglog;\r\n output out=outdata p=pgroup;\r\n ODS select ModelFit;\r\n ODS select ParameterEstimates;\r\nrun;\r\n\r\n/* Acquire the final row. */\r\nproc sql noprint;\r\nselect (count(*)) into :Rows from outdata;\r\nquit;\r\nrun;\r\n%put Rows = &Rows;\r\n/* Output prediction. */\r\nproc print data=outdata (firstobs=&Rows) noobs;\r\nvar pgroup;\r\nrun; \r\n\r\n/* Reset data. If this isn't present, rerunning this will cause the dataset to keep appending predictions. */\r\nproc delete data=cardiac;\r\nrun;","outputs":[]}]